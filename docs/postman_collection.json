{
  "info": {
    "name": "Finance AI API",
    "description": "Comprehensive API collection for Finance AI application",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{auth_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "auth_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "transaction_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('auth_token', response.token);",
                  "    pm.collectionVariables.set('user_id', response.data.user.id);",
                  "    pm.test('Registration successful', () => {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.token).to.not.be.empty;",
                  "    });",
                  "} else {",
                  "    pm.test('Registration failed', () => {",
                  "        pm.expect(pm.response.code).to.be.oneOf([400, 409]);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Doe\",\n  \"email\": \"john@example.com\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('auth_token', response.token);",
                  "    pm.collectionVariables.set('user_id', response.data.user.id);",
                  "    pm.test('Login successful', () => {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.token).to.not.be.empty;",
                  "    });",
                  "} else {",
                  "    pm.test('Login failed', () => {",
                  "        pm.expect(pm.response.code).to.be.oneOf([401, 400]);",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"john@example.com\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          }
        },
        {
          "name": "Get User Profile",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Profile retrieved successfully', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data.user).to.have.property('email');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/auth/profile",
              "host": ["{{base_url}}"],
              "path": ["auth", "profile"]
            }
          }
        }
      ]
    },
    {
      "name": "Transactions",
      "item": [
        {
          "name": "Create Expense Transaction",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('transaction_id', response.data.transaction.id);",
                  "    pm.test('Transaction created successfully', () => {",
                  "        pm.expect(response.success).to.be.true;",
                  "        pm.expect(response.data.transaction.type).to.equal('expense');",
                  "    });",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"expense\",\n  \"amount\": 25.50,\n  \"description\": \"Coffee Shop\",\n  \"category\": \"Food\",\n  \"paymentMethod\": \"card\",\n  \"merchant\": \"Starbucks\",\n  \"notes\": \"Morning coffee\",\n  \"tags\": [\"coffee\", \"morning\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/transactions",
              "host": ["{{base_url}}"],
              "path": ["transactions"]
            }
          }
        },
        {
          "name": "Create Income Transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"type\": \"income\",\n  \"amount\": 5000,\n  \"description\": \"Salary\",\n  \"category\": \"Work\",\n  \"paymentMethod\": \"bank_transfer\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/transactions",
              "host": ["{{base_url}}"],
              "path": ["transactions"]
            }
          }
        },
        {
          "name": "Get All Transactions",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Transactions retrieved successfully', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data.transactions).to.be.an('array');",
                  "    pm.expect(response.data.pagination).to.have.property('totalTransactions');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/transactions?page=1&limit=10",
              "host": ["{{base_url}}"],
              "path": ["transactions"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "limit",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Transactions by Category",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/transactions?category=Food",
              "host": ["{{base_url}}"],
              "path": ["transactions"],
              "query": [
                {
                  "key": "category",
                  "value": "Food"
                }
              ]
            }
          }
        },
        {
          "name": "Update Transaction",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 30.00,\n  \"description\": \"Updated Coffee Shop\",\n  \"notes\": \"Updated morning coffee\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/transactions/{{transaction_id}}",
              "host": ["{{base_url}}"],
              "path": ["transactions", "{{transaction_id}}"]
            }
          }
        },
        {
          "name": "Delete Transaction",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/transactions/{{transaction_id}}",
              "host": ["{{base_url}}"],
              "path": ["transactions", "{{transaction_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Budgets",
      "item": [
        {
          "name": "Create Budget",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Monthly Food Budget\",\n  \"category\": \"Food\",\n  \"amount\": 1000,\n  \"period\": \"monthly\",\n  \"notifications\": true,\n  \"rollover\": false\n}"
            },
            "url": {
              "raw": "{{base_url}}/budgets",
              "host": ["{{base_url}}"],
              "path": ["budgets"]
            }
          }
        },
        {
          "name": "Get All Budgets",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/budgets",
              "host": ["{{base_url}}"],
              "path": ["budgets"]
            }
          }
        }
      ]
    },
    {
      "name": "Goals",
      "item": [
        {
          "name": "Create Goal",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Emergency Fund\",\n  \"description\": \"6 months of expenses\",\n  \"targetAmount\": 10000,\n  \"targetDate\": \"2024-12-31\",\n  \"category\": \"savings\",\n  \"priority\": \"high\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/goals",
              "host": ["{{base_url}}"],
              "path": ["goals"]
            }
          }
        },
        {
          "name": "Get All Goals",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/goals",
              "host": ["{{base_url}}"],
              "path": ["goals"]
            }
          }
        }
      ]
    },
    {
      "name": "Advanced Features",
      "item": [
        {
          "name": "AI Expense Categorization",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Categorization successful', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data.category).to.not.be.empty;",
                  "    pm.expect(response.data.confidence).to.be.a('number');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Starbucks Coffee\",\n  \"merchant\": \"Starbucks\",\n  \"amount\": 5.50\n}"
            },
            "url": {
              "raw": "{{base_url}}/advanced/categorize",
              "host": ["{{base_url}}"],
              "path": ["advanced", "categorize"]
            }
          }
        },
        {
          "name": "Receipt Scan",
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "receipt",
                  "type": "file",
                  "src": ""
                }
              ]
            },
            "url": {
              "raw": "{{base_url}}/advanced/receipt-scan",
              "host": ["{{base_url}}"],
              "path": ["advanced", "receipt-scan"]
            }
          }
        },
        {
          "name": "Create Recurring Transaction",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Netflix Subscription\",\n  \"description\": \"Monthly Netflix subscription\",\n  \"amount\": 799,\n  \"type\": \"expense\",\n  \"category\": \"Entertainment\",\n  \"frequency\": \"monthly\",\n  \"startDate\": \"2024-01-01\",\n  \"autoApprove\": true\n}"
            },
            "url": {
              "raw": "{{base_url}}/advanced/recurring",
              "host": ["{{base_url}}"],
              "path": ["advanced", "recurring"]
            }
          }
        },
        {
          "name": "Detect Recurring Patterns",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/advanced/detect-recurring",
              "host": ["{{base_url}}"],
              "path": ["advanced", "detect-recurring"]
            }
          }
        },
        {
          "name": "Get Financial Insights",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Insights generated successfully', () => {",
                  "    pm.expect(pm.response.code).to.equal(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.success).to.be.true;",
                  "    pm.expect(response.data).to.be.an('array');",
                  "    pm.expect(response.summary).to.have.property('totalInsights');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/advanced/insights",
              "host": ["{{base_url}}"],
              "path": ["advanced", "insights"]
            }
          }
        },
        {
          "name": "Advanced Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/advanced/analytics?period=monthly",
              "host": ["{{base_url}}"],
              "path": ["advanced", "analytics"],
              "query": [
                {
                  "key": "period",
                  "value": "monthly"
                }
              ]
            }
          }
        }
      ]
    },
    {
      "name": "Analytics",
      "item": [
        {
          "name": "Transaction Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/analytics/transactions?period=monthly&groupBy=category",
              "host": ["{{base_url}}"],
              "path": ["analytics", "transactions"],
              "query": [
                {
                  "key": "period",
                  "value": "monthly"
                },
                {
                  "key": "groupBy",
                  "value": "category"
                }
              ]
            }
          }
        },
        {
          "name": "Budget Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/analytics/budgets",
              "host": ["{{base_url}}"],
              "path": ["analytics", "budgets"]
            }
          }
        },
        {
          "name": "Goal Analytics",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/analytics/goals",
              "host": ["{{base_url}}"],
              "path": ["analytics", "goals"]
            }
          }
        }
      ]
    },
    {
      "name": "Payments",
      "item": [
        {
          "name": "Create Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"amount\": 999,\n  \"currency\": \"INR\",\n  \"description\": \"Premium subscription\",\n  \"type\": \"subscription\",\n  \"gateway\": \"razorpay\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/payments/create",
              "host": ["{{base_url}}"],
              "path": ["payments", "create"]
            }
          }
        },
        {
          "name": "Verify Payment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"paymentId\": \"payment_id_here\",\n  \"gateway\": \"razorpay\",\n  \"signature\": \"payment_signature_here\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/payments/verify",
              "host": ["{{base_url}}"],
              "path": ["payments", "verify"]
            }
          }
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Add timestamp to requests for uniqueness",
          "pm.globals.set('timestamp', Date.now());"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Global test to check response time",
          "pm.test('Response time is less than 5000ms', () => {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "// Global test to check status code is not 500",
          "pm.test('No server errors', () => {",
          "    pm.expect(pm.response.code).to.not.equal(500);",
          "});"
        ]
      }
    }
  ]
}